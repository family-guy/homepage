version: 2
jobs:

  build:
    docker:
      - image: jekyll/jekyll:3.5.0
    working_directory: /srv/jekyll
    steps:
      - checkout
      - run:
          name: Build Jekyll markdown into static files for deployment
          command: deploy-scripts/scripts/build-jekyll.sh
          environment:
            JEKYLL_ENV: production
      - persist_to_workspace:
          root: /srv/jekyll
          paths:
            - _site

  containerise:
    docker:
      - image: google/cloud-sdk:latest
    environment:
      GCLOUD_PROJECT: homepage-201807
      GCLOUD_COMPUTE_ZONE: us-central1-a
      GCLOUD_K8_CLUSTER: cluster-1
      GCLOUD_SERVICE_KEY_PATH: "$HOME"/gcloud-service-key.json
      DOCKER_CONTAINER_REGISTRY: gcr.io
      DOCKER_TAG: "$DOCKER_CONTAINER_REGISTRY"/"$GCLOUD_PROJECT"/"$CIRCLE_PROJECT_REPONAME":"$CIRCLE_SHA1"
    steps:
      - setup_remote_docker
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Authenticate google cloud
          command: deploy-scripts/scripts/authenticate-gcloud.sh
      - run:
          name: Build docker image
          command: docker build --tag "$DOCKER_TAG" .
      - run:
          name: Push docker image
          command: docker push "$DOCKER_TAG"

  deploy-production:
    docker:
      - image: google/cloud-sdk:latest
    steps:
      - checkout
      - run:
          name: Authenticate google cloud
          command: |
            echo "$GCLOUD_SERVICE_KEY" | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json && \
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json && \
            gcloud config set project homepage-201807 && \
            gcloud config set compute/zone us-central1-a && \
            gcloud auth configure-docker && \
            gcloud container clusters get-credentials cluster-1
      - run:
          name: Create kubernetes deployment and expose deployment
          command: |
            apt-get -y install gettext-base && \
            cd deploy-scripts/kubernetes && \
            envsubst < deployment.yml | kubectl apply -f - && \
            kubectl create -f service.yml

workflows:
  version: 2
  build-containerise-deploy-production:
    jobs:
      - build
      - containerise:
          requires:
            - build
      - deploy-production:
          requires:
            - containerise
